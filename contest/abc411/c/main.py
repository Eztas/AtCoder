N, Q = map(int,input().split())
A = list(map(int,input().split()))

# 白を0, 黒を1とする, 左右1列
# 黒の区間を求める=白と黒の境目(異なる色同士)の数がわかれば良い
# 0, 0, 0, 0, 0
# 0, 1, 0, 0, 0 # 境目が2つ追加される(1区間で境目は2つなので、1/2)
# 0, 1, 1, 0, 0 # 境目が1つ消えて、1つ追加される(=変わらない)
# 0, 1, 0, 1, 0 # 境目が2つ増える(=区間が1つ増える)
# いちいち数を数えるためにforループを回すと計算量がかかるが
# 01反転の際に生じる境目の変動を管理すれば、forループはいらない

# 例外
# 先頭や後ろだけが変わる時
# 1, 0, 0, 0, 0 # 境目は1だが、黒の区間は1つ
# 1, 1, 0, 0, 0 # 境目は1だが、黒の区間は1つ

# 先頭も後ろも変わる時
# 1, 0, 0, 0, 1 # 境目は2だが、黒の区間は2つ

# 擬似的に先頭と後ろに白を追加しておくと、上記の場合でも境目が通常時と同じ

line = [0] * (N+2)
borderCount = 0  # 境目の数
for q in range(Q):
    line[A[q]] = 1 - line[A[q]]  # A[q]の色を反転
    borderCount += abs(line[A[q] - 1] - line[A[q]])  # 前の境目の数を更新
    borderCount += abs(line[A[q] + 1] - line[A[q]])  # 後の境目の数を更新
    print(borderCount//2)
