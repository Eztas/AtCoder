# B問題に開閉捜査がついて, 計算量も増加
# 全てに鍵をかける, Rからスタートなどの違い

N, R = map(int,input().split())
L = list(map(int,input().split()))

#部屋 i−1 または部屋iにいるときに限り、ドアiの鍵に対して開閉操作を行うことができます。
# ドア iの鍵に対して開閉操作を行ったとき、その鍵が開いているときは閉まり、閉まっているときは開きます
# 開閉は必ずではない

# 右からやろうが左からやろうが変わらないとまず仮定
# この前の左からのパターンと右からのパターンの最小値を計算する余裕はあるかも
# 1 0 0 1 0 0
# 1 1 0 1 0 0

# まず一番左の0に移動する
# その0を1にする必要があるが, そこに辿り着くまでに1があれば全部まず0

# Lの操作は全く不要
# ドア i は部屋 i−1 と部屋 i を
# ドア i は部屋 i と部屋 i+1として解釈 
# 計算はできるが分岐が多すぎる

# 0  1  2. 3.   … N - 1.     N
#.  0  1. 2. 3. ….     N - 1

# head, R, tailはこれでOK
# R, head, tailなら

# AI曰く全部のドアが閉まっている時の処理がない

idx0 = [i for i,l in enumerate(L) if l==0]

# 0がない=全て閉まっている, 開閉しなくても終わってるから0
if len(idx0) == 0:
  print(0)
  exit()

head = min(R,idx0[0])
tail = max(R,idx0[-1]+1) # 末尾の値も含めるためのR
print(sum(L[head:tail])+(tail-head))
# 1がしまっている時は開ける動作をして、0の時はスルー
# 海兵の合計はsumで再現できる
